{"version":3,"sources":["logo.svg","components/carousel.js","components/bicarousel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Carousel","props","useState","images","margin","setMargin","values","map","image","style","minWidth","src","alt","position","width","height","display","overflow","marginLeft","transition","onClick","e","prev","length","className","BiCarousel","array","setArray","index","setIndex","trans","setTrans","pause","setPause","setRight","console","log","orev","setLeft","setTimeout","i","updateLeft","updateRight","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1ff7306.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\r\nimport './directionButton.css'\r\n\r\nfunction Carousel(props) {\r\n    const [images, setImages] = useState(props.images?props.images:[]);\r\n    const [margin,setMargin] = useState(0);\r\n    const updateRight = () =>{\r\n        setMargin(prev=>{\r\n            if((prev+1)<images.length) return prev+1\r\n            else return 0;\r\n        })\r\n    }\r\n    const updateLeft = () =>{\r\n        setMargin(prev=>{\r\n            if((prev-1)<0) return images.length-1\r\n            else return (prev-1);\r\n        })\r\n    }\r\n    const values =  images.map((image) =>\r\n    <img style={{minWidth:'100%'}} src={image} alt=\"slide\"></img>);\r\n  return (\r\n            <div style={{position:'relative',width:'100%',height:'100%',display:'flex',overflow:'hidden'}}>\r\n                 <div style={{width:'100%',height:'100%',display:'flex',marginLeft:100*-margin+'%',transition:\"all 0.5s ease 0.05s\"}}>\r\n                    {values}\r\n                </div>\r\n                <a onClick={e=>{updateLeft()}} className='prev'>&#10094;</a>\r\n                <a onClick={e=>{updateRight()}} className='next'>&#10095;</a>\r\n            </div>\r\n  );\r\n}\r\n\r\nexport default Carousel;\r\n","import React, { useState } from 'react';\r\nimport './directionButton.css'\r\n\r\nfunction BiCarousel(props) {\r\n    const [images, setImages] = useState(props.images?props.images:[]);\r\n    const [margin,setMargin] = useState(0);\r\n    const [array,setArray]=useState(props.images?[props.images[0]]:[])\r\n    const [index,setIndex]=useState(0)\r\n    const [trans,setTrans]=useState(\"all 0.5s\")\r\n    const [pause,setPause]=useState(false)\r\n    const updateRight = () =>{\r\n        if(pause===false){\r\n\r\n            if(index<images.length-1){\r\n                setTrans(prev=>\"all 0.5s\")\r\n                setPause(prev=>true)\r\n                let i=index;\r\n                setArray(prev=>[images[index],images[index+1]])\r\n                console.log('update index',index)\r\n                setIndex(prev=>index+1)\r\n                setMargin(prev=>1)\r\n                setTimeout(function(){setRight(i+1)},500);\r\n                \r\n            }\r\n            else{\r\n                setPause(prev=>true)\r\n                setTrans(prev=>\"all 0.5s\")\r\n                let i=index;\r\n                setArray(prev=>[images[index],images[0]])\r\n                console.log('update index',index)\r\n                setIndex(prev=>0)\r\n                setMargin(prev=>1)\r\n                setTimeout(function(){setRight(0)},500);\r\n            }\r\n        }\r\n    }\r\n    const setRight = (index) =>{\r\n        setTrans(prev=>'all 0s')\r\n        console.log('setRight index',index)\r\n        setArray(orev=>[images[index]])\r\n        setMargin(prev=>0)\r\n        setPause(prev=>false)\r\n    }\r\n\r\n\r\n\r\n    const updateLeft = () =>{\r\n        if(pause===false){\r\n\r\n            if(index>0){\r\n                setPause(prev=>true)\r\n                setTrans(prev=>\"all 0s\")\r\n                let i=index;\r\n                setArray(prev=>[images[index-1],images[index]])\r\n                console.log('update index',index)\r\n                setIndex(prev=>prev-1)\r\n                setMargin(prev=>1)\r\n                setTimeout(function(){setLeft(i-1)},0);\r\n                \r\n            }\r\n            else{\r\n                setTrans(prev=>\"all 0s\")\r\n                setPause(prev=>true)\r\n                let i=index;\r\n                setArray(prev=>[images[images.length-1],images[index]])\r\n                console.log('update index',index)\r\n                setIndex(prev=>images.length-1)\r\n                setMargin(prev=>1)\r\n                setTimeout(function(){setLeft(images.length-1)},0);\r\n            }\r\n        }\r\n    }\r\n    const setLeft = (index) =>{\r\n        setTrans(prev=>'all 0.5s')\r\n        console.log('setRight index',index)\r\n        setMargin(prev=>0)\r\n        setTimeout(function(){setArray(orev=>[images[index]])\r\n            setPause(prev=>false)},500);\r\n    }\r\n    const values =  array.map((image) =>\r\n    <img style={{minWidth:'100%'}} src={image}></img>);\r\n  return (\r\n            <div style={{position:'relative',width:'100%',height:'100%',display:'flex',overflow:'hidden'}}>\r\n                 <div style={{width:'100%',height:'100%',display:'flex',marginLeft:100*-margin+'%',transition:trans}}>\r\n                    {values}\r\n                </div>\r\n                <a onClick={e=>{updateLeft()}} className='prev'>&#10094;</a>\r\n                <a onClick={e=>{updateRight()}} className='next'>&#10095;</a>\r\n            </div>\r\n  );\r\n}\r\n\r\nexport default BiCarousel;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Carousel from './components/carousel'\nimport BiCarousel from './components/bicarousel'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Directional Carousel\n        <div style={{height:'400px',width:'400px'}}>\n          <Carousel images={['https://i.imgur.com/YLWsY4G.jpg','https://i.imgur.com/Irg9QIx.jpg','https://i.imgur.com/W9U5y71.jpg','https://i.imgur.com/rw5BnRM.jpg','https://i.imgur.com/y4njNDk.png','https://clipground.com/images/long-clipart-13.jpg']}/>\n        </div>\n        <br></br>\n        BiDirectional Carousel\n        <div style={{height:'400px',width:'400px'}}>\n          <BiCarousel images={['https://i.imgur.com/YLWsY4G.jpg','https://i.imgur.com/Irg9QIx.jpg','https://i.imgur.com/W9U5y71.jpg','https://i.imgur.com/rw5BnRM.jpg','https://i.imgur.com/y4njNDk.png','https://clipground.com/images/long-clipart-13.jpg']}/>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}